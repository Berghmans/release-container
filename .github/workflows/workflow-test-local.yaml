name: test-local

on:
  workflow_call:
    inputs:
      ref:
        description: "The git ref to test"
        required: true
        type: string
      sha:
        description: "The git sha to test"
        required: true
        type: string
      python_version:
        description: "The Python version to use for building the image"
        required: true
        type: string
      node_version:
        description: "The Node.js version to use for building the image"
        required: true
        type: string
    outputs:
      python_version:
        description: "The exact Python version used in the image"
        value: ${{ jobs.run.outputs.python_version }}
      node_version:
        description: "The exact Node.js version used in the image"
        value: ${{ jobs.run.outputs.node_version }}

env:
  TEST_TAG: "release-container:test"

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ inputs.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          platforms: linux/amd64
          tags: ${{ env.TEST_TAG }}
          build-args: |
            PYTHON_VERSION=${{ inputs.python_version }}
            NODE_VERSION=${{ inputs.node_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - run: docker run --rm ${{ env.TEST_TAG }} "python --version"
      - run: docker run --rm ${{ env.TEST_TAG }} "node --version"
      - run: docker run --rm ${{ env.TEST_TAG }} "semantic-release --version"
      - run: docker run --rm ${{ env.TEST_TAG }} "invoke --version"
      - run: docker run --rm ${{ env.TEST_TAG }} "cfn-lint --version"
      - run: docker run --rm ${{ env.TEST_TAG }} "pylint --version"
      - name: boto3 version
        run: docker run --rm ${{ env.TEST_TAG }} "python -c 'import boto3; print(boto3.__version__)'"
      - uses: actions/checkout@v4
      # - name: Run application-specific GitHub Action test, e.g. a semantic-release dry-run
      - name: Gather output
        id: set-output
        run: |
          PYTHON_VERSION=$(docker run --rm ${{ env.TEST_TAG }} "python --version" 2>&1 | awk '{print $2}')
          echo "python_version=$PYTHON_VERSION" >> $GITHUB_OUTPUT
          NODE_VERSION=$(docker run --rm ${{ env.TEST_TAG }} "node --version" 2>&1 | awk -F 'v' '{print $2}')
          echo "node_version=$NODE_VERSION" >> $GITHUB_OUTPUT
    outputs:
      python_version: ${{ steps.set-output.outputs.python_version }}
      node_version: ${{ steps.set-output.outputs.node_version }}
